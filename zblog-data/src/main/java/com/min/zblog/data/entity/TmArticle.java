package com.min.zblog.data.entity;
// Generated 2018-8-19 21:26:30 by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.min.zblog.facility.enums.ArticleState;
import com.min.zblog.facility.enums.Indicator;

/**
 * TmArticle generated by hbm2java
 */
@Entity
@Table(name = "tm_article", catalog = "zblog")
public class TmArticle implements java.io.Serializable {

	private Long id;
	private long userId;
	private String title;
	private String description;
	private String content;
	private long categoryId;
	private Indicator top;
	private Indicator recommend;
	private Indicator original;
	private Indicator comment;
	private String keywords;
	private ArticleState state;
	private Date createTime;
	private Date updateTime;

	public TmArticle() {
	}

	public TmArticle(long userId, long categoryId) {
		this.userId = userId;
		this.categoryId = categoryId;
	}

	public TmArticle(long userId, String title, String description, String content, long categoryId, Indicator top,
			Indicator recommend, Indicator original, Indicator comment, String keywords, ArticleState state, Date createTime,
			Date updateTime) {
		this.userId = userId;
		this.title = title;
		this.description = description;
		this.content = content;
		this.categoryId = categoryId;
		this.top = top;
		this.recommend = recommend;
		this.original = original;
		this.comment = comment;
		this.keywords = keywords;
		this.state = state;
		this.createTime = createTime;
		this.updateTime = updateTime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "user_id", nullable = false)
	public long getUserId() {
		return this.userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "description", length = 400)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "content")
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "category_id", nullable = false)
	public long getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(long categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "top", length = 1)
	@Enumerated(EnumType.STRING)
	public Indicator getTop() {
		return this.top;
	}

	public void setTop(Indicator top) {
		this.top = top;
	}

	@Column(name = "recommend", length = 1)
	@Enumerated(EnumType.STRING)
	public Indicator getRecommend() {
		return this.recommend;
	}

	public void setRecommend(Indicator recommend) {
		this.recommend = recommend;
	}

	@Column(name = "original", length = 1)
	@Enumerated(EnumType.STRING)
	public Indicator getOriginal() {
		return this.original;
	}

	public void setOriginal(Indicator original) {
		this.original = original;
	}

	@Column(name = "comment", length = 1)
	@Enumerated(EnumType.STRING)
	public Indicator getComment() {
		return this.comment;
	}

	public void setComment(Indicator comment) {
		this.comment = comment;
	}

	@Column(name = "keywords", length = 200)
	public String getKeywords() {
		return this.keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}
	
	@Column(name = "state", length = 10)
	@Enumerated(EnumType.STRING)
	public ArticleState getState() {
		return this.state;
	}

	public void setState(ArticleState state) {
		this.state = state;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

}
